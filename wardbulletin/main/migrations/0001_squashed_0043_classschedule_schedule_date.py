# Generated by Django 4.1.3 on 2022-11-14 09:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('main', '0001_squashed_0038_bulletinentry_raw_content'), ('main', '0039_alter_generalsettings_alternate_homepage_photo_and_more'), ('main', '0040_delete_meetingtime_remove_bulletinentry_section_and_more'), ('main', '0041_classschedule_classentry'), ('main', '0042_alter_classentry_additional_note_and_more'), ('main', '0043_classschedule_schedule_date')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BulletinGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=False, help_text='Determines if the group should be displayed or not. Only the first enabled group will be displayed.')),
                ('name', models.CharField(help_text='The name of the bulletin group. It is only to help you keep track of what entries the group contains, so choose anything you like.', max_length=255)),
            ],
            options={
                'verbose_name': 'Bulletin Group',
                'verbose_name_plural': 'Bulletin Groups',
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(help_text='Required. The source of the quote.', max_length=128)),
                ('quote', models.TextField(help_text='Required. The quote content.')),
                ('url', models.CharField(blank=True, default='', help_text='Optional. The optional URL of the quote. If included, will add a hyperlink to the source field under the quote on the program page.', max_length=255)),
                ('enabled', models.BooleanField(default=True, help_text='Determines if the quote should be added to the display rotation.')),
            ],
            options={
                'verbose_name': 'Quote',
                'verbose_name_plural': 'Quotes',
            },
        ),
        migrations.CreateModel(
            name='BulletinEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Determines if the row should be displayed on the page.')),
                ('position', models.PositiveSmallIntegerField(blank=True, help_text='The order the entry appears within the group. Leave blank to auto-fill with next value.', null=True)),
                ('title', models.CharField(help_text='Required. Without a value, will center on the page. With a value included, will be left-justified.', max_length=128)),
                ('value', models.CharField(blank=True, default='', help_text='Optional. If added, will right-justify in-line with the (now left-justified) title.', max_length=128)),
                ('url', models.CharField(blank=True, help_text='Optional. If added, will add a hyperlink to the Value field.', max_length=255, null=True, verbose_name='URL')),
                ('additional_note', models.CharField(blank=True, default='', help_text='Optional. If included, will show up to the right of the Value field, outside the hyperlink (for example, the hymn number next to the hymn name).', max_length=128)),
                ('bulletin_group', models.ForeignKey(help_text='Required. Select which Bulletin Group this entry belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='bulletinEntries', to='main.bulletingroup')),
                ('raw_content', models.TextField(blank=True, help_text='Optional. Adding content here will override the default row,\n\t\tand the rest of the fields will be ignored. Supports Markdown and HTML.')),
            ],
            options={
                'verbose_name': 'Bulletin Entry',
                'verbose_name_plural': 'All Bulletin Entries',
            },
        ),
        migrations.CreateModel(
            name='ContactTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Determines if the group should be displayed or not.')),
                ('name', models.CharField(help_text='Required. The name of the contact group. It will appear above the table on the webpage.', max_length=255)),
                ('additional_notes', models.TextField(blank=True, help_text='Optional. Additional notes that will appear below the table on the webpage if set.')),
                ('position', models.PositiveSmallIntegerField(blank=True, help_text='The order the table appears on the page. Leave blank to auto-fill with next value.', null=True)),
                ('raw_content', models.TextField(blank=True, help_text='Optional. Adding content here will override the default table layout. Supports\n\t\tMarkdown and HTML.')),
            ],
            options={
                'verbose_name': 'Contact Table',
                'verbose_name_plural': 'Contact Tables',
            },
        ),
        migrations.CreateModel(
            name='ActiveBulletinEntry',
            fields=[
            ],
            options={
                'verbose_name': 'Active Bulletin Entry',
                'verbose_name_plural': 'Active Bulletin Entries',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main.bulletinentry',),
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Determines if the announcement should be displayed on the announcements page.')),
                ('position', models.PositiveSmallIntegerField(blank=True, help_text='The order the announcement appears on the page. Leave blank to auto-fill with next value.', null=True)),
                ('content', models.TextField(help_text='Required. Supports markdown formatting')),
                ('name', models.CharField(help_text='Required. Helps you organize your announcments internally.', max_length=128)),
            ],
            options={
                'verbose_name': 'Announcement',
                'verbose_name_plural': 'Announcements',
            },
        ),
        migrations.CreateModel(
            name='GeneralSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_color', models.PositiveSmallIntegerField(choices=[(1, 'Slate'), (2, 'Gray'), (3, 'Zinc'), (4, 'Neutral'), (5, 'Stone'), (6, 'Brown'), (7, 'Red'), (8, 'Orange'), (9, 'Amber'), (10, 'Yellow'), (11, 'Lime'), (12, 'Green'), (13, 'Emerald'), (14, 'Teal'), (15, 'Cyan'), (16, 'Sky'), (17, 'Blue'), (18, 'Indigo'), (19, 'Violet'), (20, 'Purple'), (21, 'Fuchsia'), (22, 'Pink'), (23, 'Rose')], default=6, help_text='Website Theme Color')),
                ('logo_path', models.FilePathField(blank=True, help_text='Path to the logo displayed in the top-left corner of the webpage.\n\t\tIf not provided, the corner will be left blank.', path='/opt/services/djangoapp/static/main/images', recursive=True)),
                ('photos_path', models.FilePathField(allow_folders=True, blank=True, help_text='Path to the directory containing the photos that will be displayed\n\t\trandomly on the program page. If not provided, the quote will be lonely.', path='/opt/services/djangoapp/static/main/images', recursive=True)),
                ('ward_name', models.CharField(help_text='Required. It will display at the top of the main page.', max_length=128)),
                ('subscribe_email', models.EmailField(blank=True, help_text='Optional. If you have a mid-week email list, add the contact here so people can subscribe.', max_length=254)),
                ('homepage_photo', models.FilePathField(blank=True, help_text='Path to the photo to be displayed on the homepage.\n\t\tIf not provided, the hompage will re-center the content without the image.', path='/opt/services/djangoapp/static/main/images', recursive=True)),
                ('homepage_quote', models.ForeignKey(blank=True, help_text='Select which quote in the quote table you want displayed under the picture on the homepage.\n\t\tDisabled quotes are allowed. If not provided, no quote will be displayed on the homepage.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.quote')),
                ('alternate_homepage_photo', models.ImageField(blank=True, help_text='Upload a photo here to set an alternate photo for the homepage.', upload_to='')),
                ('alternate_photo', models.ImageField(blank=True, help_text='Upload a photo here to set an alternate photo for the program.', upload_to='')),
                ('first_hour_meeting_time', models.CharField(default='', help_text='Required. Your Sacrament Meeting meeting time.', max_length=8)),
                ('meetinghouse_address', models.TextField(blank=True, help_text='Optional. Will display on the homepage if entered. Try and format it using 2-3 lines of text.')),
                ('next_meeting_date', models.DateField(blank=True, help_text='Optional. The website automatically displays the next Sunday for the meeting date.\n\t\t\tSet a value here to override the next meeting date.', null=True)),
                ('second_hour_meeting_time', models.CharField(default='', help_text='Required. Your classes meeting time.', max_length=8)),
            ],
            options={
                'verbose_name': 'General Settings',
                'verbose_name_plural': 'General Settings',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Required. The contact's name.", max_length=128)),
                ('email', models.EmailField(blank=True, help_text="Optional. The contact's email address.", max_length=254)),
                ('phone', models.CharField(blank=True, help_text="Optional. The contact's phone number.", max_length=20)),
                ('calling', models.CharField(help_text="Required. The contact's calling.", max_length=128)),
                ('position', models.PositiveSmallIntegerField(blank=True, help_text='The position of the contact in the table on the page. Leave blank to auto-fill with next value.', null=True)),
                ('contact_table', models.ForeignKey(help_text='Required. Select which Contact Table this contact belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='main.contacttable')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'All Contacts',
            },
        ),
        migrations.CreateModel(
            name='ClassSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(blank=True, help_text='The order the group will appear on the program if multiple groups are enabled', null=True)),
                ('enabled', models.BooleanField(default=False, help_text='Determines if the group should be displayed or not.')),
                ('title', models.CharField(help_text='The title for the class schedule group. It is displayed at the top of the list of classes on the program.', max_length=255)),
                ('schedule_date', models.DateField(blank=True, help_text='Optional. If included, will appear below the title on the program.', null=True)),
            ],
            options={
                'verbose_name': 'Class Schedule',
                'verbose_name_plural': 'Class Schedules',
            },
        ),
        migrations.CreateModel(
            name='ClassEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Determines if the row should be displayed on the page.')),
                ('position', models.PositiveSmallIntegerField(blank=True, help_text='The order the entry appears within the group. Leave blank to auto-fill with next value.', null=True)),
                ('title', models.CharField(help_text='Required. Without a value, will center on the page. With a value included, will be left-justified.', max_length=128)),
                ('value', models.CharField(blank=True, default='', help_text='Optional. If added, will right-justify in-line with the (now left-justified) title.', max_length=128)),
                ('url', models.CharField(blank=True, help_text='Optional. If added, will add a hyperlink to the Value field.', max_length=255, null=True, verbose_name='URL')),
                ('additional_note', models.CharField(blank=True, default='', help_text='Optional. If included, will show up to the right of the Value field, outside the hyperlink (for example, the class meeting location).', max_length=128)),
                ('raw_content', models.TextField(blank=True, help_text='Optional. Adding content here will override the default row,\n\t\tand the rest of the fields will be ignored. Supports Markdown and HTML.')),
                ('class_schedule', models.ForeignKey(help_text='Required. Select which Class Schedule Group this entry belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='classEntries', to='main.classschedule')),
            ],
            options={
                'verbose_name': 'Class Entry',
                'verbose_name_plural': 'All Class Entries',
            },
        ),
    ]
